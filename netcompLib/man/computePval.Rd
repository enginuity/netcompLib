% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/generic_computePval.R
\name{computePval}
\alias{computePval}
\title{Computes p-value for likelihood ratio test}
\usage{
computePval(NetS, adja1, adja2, Nobs = 1, pl, mode = "default",
  model_type = "default", verbose = TRUE, vbset = c(1, 0, 0))
}
\arguments{
\item{NetS}{[\code{\link{NetworkStruct}}] :: Model to compute p-value with}

\item{adja1}{[matrix/array] :: Adjacency matrix/array}

\item{adja2}{[matrix/array] :: Adjacency matrix/array}

\item{Nobs}{[int] :: Number of network observations per class (default = 1)}

\item{pl}{[list] :: Simulation/Testing parameters, set by set_sim_param}

\item{mode}{[char] :: How to output results? 'default' gives the standard p-values; 'nodewise' gives the chi-square contributions per node; 'chisq' gives the chi-square test statistic, other modes: 'fast', 'fast-densitydiff', 'fast-corr'}

\item{model_type}{temp}

\item{verbose}{[logical] :: Prints progress if TRUE}

\item{vbset}{[vector-int] :: See \link{OutputSettings}
Regular-verbose -- outputs general information for processing the NetworkStructList case
High-verbose -- outputs dots for each struct processed}
}
\value{
[] :: A matrix (or a list of matrices) of p-values (depending on the testing parameters)
}
\description{
This function takes the input network structure (or a list of network structures), and computes the likelihood ratio test for the two input adjacency matrices (or arrays).
}

