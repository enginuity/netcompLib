% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/fit_SBM.R
\name{completeMatrix}
\alias{completeMatrix}
\title{Estimates missing entries of an input matrix}
\usage{
completeMatrix(adjm, method = "rcmeans", laplacian = FALSE, eigenvecs = 0,
  softImpute_rankmax = 5, softImpute_thresh = 1e-05,
  softImpute_maxit = 100)
}
\arguments{
\item{adjm}{[matrix-numeric] :: Input matrix}

\item{method}{[character] :: Two possible values: 'rcmeans' or 'softImpute'}

\item{laplacian}{[logical] :: If TRUE, the results are based on the Laplacian matrix}

\item{eigenvecs}{[int] :: If nonzero, this function returns eigenvectors instead of a matrix. If this is positive, it returns the 'eigenvecs' largest eigenvectors; if negative, it returns the 'eigenvecs' smallest eigenvectors.}

\item{softImpute_rankmax}{temp}

\item{softImpute_thresh}{temp}

\item{softImpute_maxit}{temp}

\item{softImpute_rank}{[int] :: If using the 'softImpute method, this sets the maximum rank of the low-rank approximation.}
}
\value{
[matrix] :: The returned value is either a square matrix, or a matrix containing the first few eigenvectors.
}
\description{
This function applies one of two matrix-completion techniques. The cheap version ('rcmeans') simply fills each missing value with the average of all cells in its row/column. This results in a matrix that is still a properly weighted undirected network. The other version ('softImpute') calls the function in the corresponding R package 'softImpute'. Essentially, it looks for entries to fill that matrix such that it preserves low rank. I think the resulting matrix is symmetric if the input is symmetric, but there's no guarantee that it's a proper adjacency matrix (in that the values can possibly be negative...)
}
\details{
There is an option to return the filled adjacency matrix, the matrix converted to Laplacian form, or even simply the first few eigenvectors of the matrix (or the Laplacian)

This function requires existence of the 'rARPACK' package, since that is used to perfrom eigenvector/eigenvalue computations efficiently. Also, if method is set to 'softImpute', the 'softImpute' package is required.
}

